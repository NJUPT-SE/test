/*
 * 解压缩编码列表  1313
 * 输入：nums = [1,2,3,4]
输出：[2,4,4,4]
解释：第一对 [1,2] 代表着 2 的出现频次为 1，所以生成数组 [2]。
第二对 [3,4] 代表着 4 的出现频次为 3，所以生成数组 [4,4,4]。
最后将它们串联到一起 [2] + [4,4,4] = [2,4,4,4]。
 */
public class Test06 {
	public static void main(String[] args) {
		int[] a= {1,1,2,3};
		a=decompressRLElist(a);
		for(int i=0;i<a.length;i++) {
			System.out.print(a[i]);
		}
	}
	public static  int[] decompressRLElist(int[] nums) {
        int n=nums.length;
        int[] ans=new int[5000];
        int c=0;
        int b=0;
        //通过观察，第一个数总为偶数，为了实现数组的依次增加需要定义一个全局变量c
        for(int i=0;i<n;i++) {
        	if(i%2==0) {
        		for(int j=0;j<nums[i];j++) {
        			ans[c++]=nums[i+1];
        		}
        	}
        }
        //算出ans数组有几个不为0的数
        for(int i:ans) {
        	if(i!=0) {
        		b++;
        	}
        }
        //生成答案数组
        int[] ans1=new int[b];
        for(int i=0;i<b;i++) {
        	ans1[i]=ans[i];
        }
		return ans1;
    }
}

 
